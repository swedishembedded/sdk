image: swedishembedded/build:latest

default:
  tags:
    - docker

stages:
 - check
 - build
 - test
 - release
 - deploy

# This job runs all code checks, unit and integration tests
check:
    image: swedishembedded/build:latest
    stage: check
    artifacts:
        paths:
            - report.html
            - log.html
        expire_in: 1 week
        when: always
    rules:
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    script:
        - ./scripts/init
        - ./scripts/gen-tags cscope
        - robot scrum
        - ./scripts/ci/check-links
        - ./scripts/check

# This job builds applications
build:
    image: swedishembedded/build:latest
    stage: build
    dependencies:
        - check
    artifacts:
        paths:
            - doc/_build/zephyr.pdf
            - build-apps/**/zephyr.elf
            - build-release/**/release/
            - release/*
        expire_in: 1 week
        when: always
    rules:
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    script:
        - ./scripts/init
        - ./scripts/build

# This job runs all system tests on built applications
test:
    image: swedishembedded/build:latest
    stage: test
    dependencies:
        - build
    artifacts:
        paths:
            - build-tests/coverage*
        expire_in: 1 week
        when: always
    rules:
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    script:
        - ./scripts/init
        - ./scripts/test
        - robot post-build

# This is a job that does the "long build"
# where we start with a fresh ubuntu image
build_from_scratch:
    image: ubuntu:latest
    stage: check
    rules:
        - if: $CI_PIPELINE_SOURCE == "web"
        - if: $CI_PIPELINE_SOURCE == "schedule"
    before_script:
        - bash -x ./scripts/install-sdk
        - bash -x ./scripts/init
    script:
        - robot scrum
        - bash -x ./scripts/check
        - bash -x ./scripts/build
        - bash -x ./scripts/test
        - robot post-build
